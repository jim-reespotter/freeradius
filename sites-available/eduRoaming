##
## processor to handle offsite eduroam auth requests
## (we're assuming the eduroamers have filtered correctly here)
## 

server eduRoaming {

    authorize {

	filter_username
	preprocess
	operator-name
#	suffix
	split_username_nai
	
	## Differentiation - do it in inners...

	eap-eduroam {
	    ok = return
	    updated = return
	}
    }

    authenticate {

	eap-eduroam
    }

    preacct {

	preprocess
#	acct_unique
	suffix
    }

    accounting {

#	detail
	attr_filter.accounting_response
    }
 
    session {
    }

    post-auth {

	if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
	    update reply {
		&User-Name !* ANY
	    }
	}

	update {
	    &reply: += &session-state:
	}

	remove_reply_message_if_eap

	Post-Auth-Type REJECT {
	    attr_filter.access_reject
	    eap-eduroam
	    remove_reply_message_if_eap
	}

	Post-Auth-Type Challenge {
	}

	Post-Auth-Type Client-Lost {
	}

	if (EAP-Key-Name && &reply:EAP-Session-Id) {
	    update reply {
		&EAP-Key-Name := &reply:EAP-Session-Id
	    }
	}
    }

    pre-proxy {
    }

    post-proxy {
	eap-eduroam
    }
}
