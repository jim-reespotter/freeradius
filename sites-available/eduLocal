##
## processor to handle onsite eduroam auth requests
## (this is the complicated one)
## 

server eduLocal {

  authorize {

	## do we need these?
	filter_username
	preprocess

	if (&User-Name) {
	    # standard eduroam user auth: Username contains a @, SSID == eduroam
	    if (&User-Name =~ /@/ && &Called-Station-ID =~ /eduroam$/) {  
		operator-name
		#suffix	don't think we need this?
		split_username_nai

		## Its a local user:
		if ( "%{config:realms.%{Stripped-User-Domain}}" ) {
		    eap-eduroam {
			ok = return
			updated = return
		    }
		}
		## Its a visitor
		else {
		    update {
			control:Load-Balance-Key := &Calling-Station-ID
			control:Proxy-To-Realm := 'eduroam_nrps'
			request:Operator-Name := "1${eduroam_config.operator_name}"
		    }
		    return
		}
	    }

	    ## This is local machine auth (eduroam or other SSID - add filter if you want):
	    elsif (&User-Name =~ /^host\/.*/) {
		eap-corp {
		    ok = return
		    updated = return
		}
	    }
	    ## Add other SSID processing here (same APs)
	}
  }

  authenticate {

	eap-eduroam
	eap-corp
  }

  preacct {

	preprocess
	suffix
  }

  accounting {

#	detail
	attr_filter.accounting_response

	update control {
	    Replicate-To-Realm := "fw_acct"
	}
	replicate

  }

  session {
  }

  post-auth {

	if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
		update reply {
			&User-Name !* ANY
		}
	}
	update {
		&reply: += &session-state:
	}

	remove_reply_message_if_eap

	Post-Auth-Type REJECT {
		attr_filter.access_reject
		eap-eduroam
		remove_reply_message_if_eap
	}

	Post-Auth-Type Challenge {
	}

	Post-Auth-Type Client-Lost {
	}

	if (EAP-Key-Name && &reply:EAP-Session-Id) {
		update reply {
			&EAP-Key-Name := &reply:EAP-Session-Id
		}
	}

	## VLAN stuff: set standard replies here:
	## this lot Aruba specific? F-P, T-M-T and T-T wrong...
	update reply {
	    Framed-Protocol := PPP
	    Service-Type := Framed
	    Tunnel-Type := GRE
	    Tunnel-Medium-Type := IP
	}

	## VLAN stuff: set specific VLAN ID:
	## On a good day, inners will have set correct user-name, stripped-username, domain, groups to outer...
	## We only have a &Stripped-User-Domain if its username@realm.ac.uk format, so user auth:
	if (&Stripped-User-Domain) {
	    if ("%{config:realms.%{Stripped-User-Domain}}") {
		## further differentiation for staff/stu/machine here (based on attrs from inner)
		update reply {
		    Tunnel-Private-Group-ID := "%{config:vlans.default.local}"
	        }
	    }
	    else {
		## visitor
		update reply {
		    Tunnel-Private-Group-ID := "%{config:vlans.default.visitor}"
		}
	    }
	}
	## one of our computers...
	elsif (&User-Name =~ /^host\/.*/) {
	    update reply {
	        Tunnel-Private-Group-ID := "%{config:vlans.default.corp}"
	    }
	}
    }

    pre-proxy {
	attr_filter.pre-proxy
    }

    post-proxy {

	eap-eduroam
    }
}
